
bandit1 : on utilise "cat" pour ouvrir le txt dans le terminal

bandit2 : on utilise "cat" avec une redirection (cat < -)

bandit3 : idem mais on met le nom de fichier entre guillemets pour pas que les 
espaces posent problèmes (cat < "--spaces in this filename--")

bandit4 : lister tous les fichiers (y compris les cachés) avec ls -a

bandit5 : on check le format de chaque fichier avec file ./* (le mot de passe est
dans le seul fichier en ASCII donc lisible)

bandit6 : on utilise "find -size 1033c" pour trouver le fichier qui fait 1033 bytes.

bandit7 : on utilise "file -size 33c -user bandit7 -group bandit6" pour trouver 
les fichiers qui correspondent aux critères

bandit8 : on utilise "cat data.txt | grep millionth" pour n'avoir que la ligne avec
le mot millionth.

bandit9 : on utilise "cat data.txt | sort | uniq -u". L'option -u de uniq permet 
de n'avoir que le mot de passe n'ayant qu'une seule occurence dans data.txt.

bandit10 : on utilaise "strings data.txt | grep "======"". strings récupère tous les 
caractères lisiaaables et grep fait une recherche du paterne "======"

bandit11 : cat data.txt | base64 -d

bandit12 : cat data.txt | tr 'A-Za-z' 'N-ZA-Mn-za-m'

bandit13 : xxd -r data.txt > data2 pour retransformer le hexdump en binary
           xxd data2 pour check les premiers charactères en hex
           Si c'est 6461 : c'est un tar, on le transforme en tar avec mv puis on utilise tar -xvf data2.tar
           Si c'est 1F8B : c'est un gzip, on le transforme en gz avec mv puis on utilise gzip -d data2.gz
           Si c'est 425A : c'est un bzip2, on le transforme en bz2 avec mv puis on utilise bzip2 -d data2.bz2